{"name": "test_method[启用组织 01]", "status": "broken", "statusDetails": {"message": "pymysql.err.OperationalError: (1049, \"Unknown database 'data_operation_open_platform'\")", "trace": "kwargs = {'apis': [{'assert': [{'expect': 200, 'type': 'status'}, {'expect': '操作成功', 'name': 'message', 'type': 'sys'}], 'data'...on'}, 'name': '启用组织 01', 'setup': [{'sqls': 'update ums_organization set is_able = 0 where id = 35;', 'type': 'db'}]}]}\n\n    @pytest.fixture\n    def my_fixture(kwargs):\n        # 实例化HTTPClient,用于发送请求\n        http_client = HTTPClient_A()\n        # 实例化MySQLClient客户端\n        mysql_client = MySQLClient()\n    \n        # 1.处理setup部分\n        execute_sql = kwargs[\"apis\"][0]\n        for item in execute_sql.get(\"setup\", \"\") :\n            if item.get(\"type\") == \"api\" :\n                http_client.request(**item.get(\"data\"))\n            elif item.get(\"type\") == \"db\" :\n>               mysql_client.execute(item.get(\"sqls\"))\n\n..\\..\\conftest.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\lib\\different_db\\mysqlclient_A.py:38: in execute\n    with pymysql.connect(host=self.host,\nC:\\Users\\shaoj\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pymysql\\connections.py:352: in __init__\n    self.connect()\nC:\\Users\\shaoj\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pymysql\\connections.py:636: in connect\n    self._request_authentication()\nC:\\Users\\shaoj\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pymysql\\connections.py:911: in _request_authentication\n    auth_packet = self._read_packet()\nC:\\Users\\shaoj\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pymysql\\connections.py:729: in _read_packet\n    packet.raise_for_error()\nC:\\Users\\shaoj\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pymysql\\protocol.py:221: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = b\"\\xff\\x19\\x04#42000Unknown database 'data_operation_open_platform'\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        errval = data[9:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.OperationalError: (1049, \"Unknown database 'data_operation_open_platform'\")\n\nC:\\Users\\shaoj\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pymysql\\err.py:143: OperationalError"}, "parameters": [{"name": "kwargs", "value": "{'apis': [{'name': '启用组织 01', 'setup': [{'type': 'db', 'sqls': 'update ums_organization set is_able = 0 where id = 35;'}], 'data': {'path': '/ums/organization/enableOrganization', 'method': 'post', 'headers': None, 'json': {'timestamp': None, 'organizationNoList': [35]}}, 'assert': [{'type': 'status', 'expect': 200}, {'type': 'sys', 'name': 'message', 'expect': '操作成功'}]}]}"}], "start": 1686644934035, "stop": 1686644934035, "uuid": "d42605d4-85ce-4cd9-8aa0-e1fb75f91661", "historyId": "68e270a7b28188159f0ae6eeeb600028", "testCaseId": "1ba5d185f5f8952a4afb4af1dfeb466f", "fullName": "testcases.test_A.test_organization.test_enableOrganization.TestCaseCommon#test_method", "labels": [{"name": "feature", "value": "测试接口"}, {"name": "parentSuite", "value": "testcases.test_A.test_organization"}, {"name": "suite", "value": "test_enableOrganization"}, {"name": "subSuite", "value": "TestCaseCommon"}, {"name": "host", "value": "admin"}, {"name": "thread", "value": "12516-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_A.test_organization.test_enableOrganization"}]}